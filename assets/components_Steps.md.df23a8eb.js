import{_ as o,r as n,o as c,c as r,d as s,w as e,e as a}from"./app.2b206eb8.js";const S=JSON.parse('{"title":"Steps","description":"","frontmatter":{},"headers":[{"level":2,"title":"步骤条组件","slug":"步骤条组件","link":"#步骤条组件","children":[{"level":3,"title":"Example","slug":"example","link":"#example","children":[]},{"level":3,"title":"Code","slug":"code","link":"#code","children":[]}]},{"level":2,"title":"Other Example","slug":"other-example","link":"#other-example","children":[]},{"level":2,"title":"传递插槽","slug":"传递插槽","link":"#传递插槽","children":[]}],"relativePath":"components/Steps.md"}'),i={name:"components/Steps.md"},D=a('<h1 id="steps" tabindex="-1">Steps <a class="header-anchor" href="#steps" aria-hidden="true">#</a></h1><h2 id="步骤条组件" tabindex="-1">步骤条组件 <a class="header-anchor" href="#步骤条组件" aria-hidden="true">#</a></h2><p>封装一个步骤条组件（vue3）</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h3>',4),y=a(`<h3 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h3><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">n-step</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">header-dot</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">title</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">右边</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">默认content在右边</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">n-step</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">n-step</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">contentPosition</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">left</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">title</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">左边</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">contentPosition=left  属性将内容展示在左边</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">/&gt;</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">n-step</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">n-step</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;template #title&gt; 传递插槽 &lt;/template&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;template #description&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    业务场景中有时需要对第三方组件进行二次封装, 比如弹窗,表格等组件,</span></span>
<span class="line"><span style="color:#A6ACCD;">    有时项目内会根据业务进行二次封装成业务组件,</span></span>
<span class="line"><span style="color:#A6ACCD;">    新的业务组件会需要把自己的slots透传给原本的组件, 也可以叫传递插槽</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;/template&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">n-step</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="other-example" tabindex="-1">Other Example <a class="header-anchor" href="#other-example" aria-hidden="true">#</a></h2><p>基于Step组件定制化开发一些业务组件</p>`,4),d=a(`<h2 id="传递插槽" tabindex="-1">传递插槽 <a class="header-anchor" href="#传递插槽" aria-hidden="true">#</a></h2><p>业务场景中有时需要对第三方组件进行二次封装, 比如弹窗,表格等组件,有时项目内会根据业务进行二次封装成业务组件, 新的业务组件会需要把自己的slots透传给原本的组件, 也可以叫传递插槽</p><p>// NStep.vue 组件中</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">NStepLeft</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">v-bind</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$attrs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;!-- 将slot透传给NStepLeft --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;template</span></span>
<span class="line"><span style="color:#A6ACCD;">        v-for=&quot;(item, key, index) in $slots&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        :key=&quot;index&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        v-slot:[key]=&quot;slotScope&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;slot :name=&quot;key&quot; v-bind=&quot;slotScope&quot;&gt;&lt;/slot&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;/template&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">NStepLeft</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>NStepLeft 是需要被二次封装的组件</p>`,5);function C(F,A,_,h,u,m){const p=n("NSteps"),l=n("Wrap"),t=n("MileStone");return c(),r("div",null,[D,s(l,null,{default:e(()=>[s(p)]),_:1}),y,s(l,null,{default:e(()=>[s(t)]),_:1}),d])}const x=o(i,[["render",C]]);export{S as __pageData,x as default};
